// ignore_for_file: use_build_context_synchronously

import 'dart:convert';
import 'package:appclient/Widgets/Itembill.dart';
import 'package:appclient/Widgets/uilt.dart';
import 'package:appclient/models/productBillModel.dart';
import 'package:appclient/services/baseApi.dart';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

class Billdg extends StatefulWidget {
  @override
  _BilldgState createState() => _BilldgState();
}

class _BilldgState extends State<Billdg> {
  Autogenerated? billData; // Dữ liệu bill sẽ được lưu ở đây

  @override
  void initState() {
    super.initState();
    fetchData();
  }


  Future<void> fetchData() async {
    final SharedPreferences prefs = await SharedPreferences.getInstance();
    final String? idUser = prefs.getString("idUser");
    if(idUser == null){
      Navigator.pop(context);
      showSnackBarErr(context, "Không tìm thấy bill");
    }

    final apiUrl = "$BASE_API/api/bill/$idUser";

    try {
      final response = await http.get(Uri.parse(apiUrl));

      if (response.statusCode == 200) {
        final Map<String, dynamic> responseData = jsonDecode(response.body);

        // Sử dụng lớp Autogenerated để giải mã dữ liệu JSON
        setState(() {
          billData = Autogenerated.fromJson(responseData);
        });

        // In ra dữ liệu ví dụ
        print('Status: ${billData!.status}');
        print('Message: ${billData!.msg}');
        // Xử lý các trường khác theo nhu cầu của bạn
      } else {
        print('API Request failed with status: ${response.statusCode}');
        print('Response body: ${response.body}');
      }
    } catch (error) {
      print('Error during API call: $error');
    }
  }

  @override
  Widget build(BuildContext context) {
    // Sử dụng dữ liệu trong cây widget
    return Container(
      padding: const EdgeInsets.fromLTRB(20, 0, 20, 0),
      child: Scaffold(
        body: billData == null
            ? const Center(child: CircularProgressIndicator())
            : ListView.builder(
                itemCount: billData!.biilModel?.length ?? 0,
                itemBuilder: (context, index) {
                  final billItem = billData!.biilModel![index];

                  if (billItem.status == 5 ) {
                    return Itembill(billItem: billItem);
                  } else {
                    // Trả về một widget trống nếu không muốn hiển thị bill này
                    return const SizedBox.shrink();
                  }
                },
              ),
      ),
    );
  }
}
